1. /home/pi/Downloads/KillSwitch/Bash/killswitch-install.sh
    installs the rest of the scripts
    also called from killswitch-settings.sh when updating if not rebooted
2. /usr/local/bin/killswitch-uninstall.sh
    uninstalls all this crap
    also called from killswitch-settings.sh when uninstalling
3. /lib/systemd/system/killswitch-boot.service
    runs killswitch-boot.py at boot
4. /usr/local/bin/killswitch-boot.py
    reads trigger inputs from hardware
5. /lib/systemd/system/killswitch-shutdown.service
    runs killswitch-shutdown.py at shutdown/reboot
6. /usr/local/bin/killswitch-shutdown.py
    writes to feedback - one pulse for shutdown, two pulses for reboot
7a. /usr/local/bin/killswitch-settings.sh
    the pretty settings dialog script, but in bash
7b. /usr/local/bin/killswitch-settings.py
    the pretty settings dialog script, but in python
8. /home/pi/.killswitch/killswitch-settings.conf
    storage for settings script
    created on demand by killswitch-settings.sh/py
9. /home/pi/.killswitch/killswitch-avrdude.conf
    config file for programming avr over ICSP
    created by killswitch-install.sh

if installing in RetroPie (no home folder/browser):
    curl \
    -H "Authorization: token <GITHUB_TOKEN>" \
    -H "Accept: "application/vnd.github.v3.raw" \
    -L \
    -o KillSwitch.tar.gz \
    https://api.github.com/repos/danahynes/KillSwitch/zipball/latest
    
if we add a new setting:

add necessary EEPROM constants
add default value to firmware EEPROM in setup() if not 0
add serial code to firmware to read/write new setting in loop()
add code to software settings init to see if new setting has a value
if it's blank, write the default to the conf file

to create new release of master:

update number in Other/make-release.sh
save
run Other/make-release.sh

open/close killswitch-firmware_X.X.X.hex to stage it

commit/push

log into github
go to repo
click on releases above color bar
click draft new release
tag version should be vX.X.X
branch is master
write title as vX.X.X
write description
publish release

one-liner:

???

loopback serial for testing:

./home/dana/Documents/Bash/terminaloop/terminaloop
OR
socat -d -d pty,raw,echo=0 pty,raw,echo=0
